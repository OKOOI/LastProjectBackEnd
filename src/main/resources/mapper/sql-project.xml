<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.mapper.ProjectMapper">

	<!-- 공지사항 리스트 조회 -->
	<select id="listNoticeDto" resultType="project.dto.NoticeDto">
		select notice_idx, notice_title,
			   date_format(notice_created_time, '%Y.%m.%d' ) as notice_created_time
		  from notice
		 where notice_deleted = 'N';
	</select>

	<!-- 공지사항 글별 상세페이지 조회 -->
	<select id="noticeDetail" parameterType="int" resultType="project.dto.NoticeDto">
		select notice_idx, notice_title, notice_content,
			   date_format(notice_created_time, '%Y.%m.%d' ) as notice_created_time
		  from notice
		 where notice_deleted = 'N' and notice_idx=#{noticeIdx}
	</select>

	<!-- 공지사항 작성 -->
	<insert id="insertNotice" parameterType="project.dto.NoticeDto">
		insert into notice(notice_title,notice_content,notice_img,notice_created_time, user_id)
		values (#{noticeTitle}, #{noticeContent}, #{noticeImg}, now(), 'admin')
	</insert>
	
	<!-- 공지사항 삭제 -->
	<delete id="deleteNotice" parameterType="int">
		update notice
		   set notice_deleted = 'Y',
		       user_id = 'Test'
		 where notice_idx = #{noticeIdx} 		 
	</delete>
	
	<!-- 공지사항 수정 -->
	<update id="updateNotice" parameterType="project.dto.NoticeDto">
		update notice
		   set notice_title = #{noticeTitle}, 
		       notice_content = #{noticeContent}, 
		       notice_updated_time = now(),
		       user_id = 'Test'
		 where notice_idx = #{noticeIdx} 		 
	</update>
	
	<!-- QNA 리스트 조회 -->
	<select id="listQnaDto" resultType="project.dto.QnaDto">
		select qna_idx, qna_title,
			   date_format(qna_created_time, '%Y.%m.%d' ) as qna_created_time
		  from qna
		 where qna_deleted = 'N';
	</select>
	
	<!-- QNA 상세페이지 조회 
	<select id="qnaDetail" parameterType="int" resultType="project.dto.QnaDto">
		select qna_idx, qna_title, qna_content,
			   date_format(qna_created_time, '%Y.%m.%d' ) as qna_created_time
		  from qna
		 where qna_deleted = 'N' and qna_idx=#{qnaIdx}
	</select> -->
	
	<!-- QNA 작성 -->
	<insert id="insertQna" parameterType="project.dto.QnaDto">
		insert into qna(qna_title,qna_content,qna_img,qna_created_time, user_id)
		values (#{qnaTitle}, #{qnaContent}, #{qnaImg}, now(), 'admin')
	</insert>
	
	<!-- QNA 삭제 -->
	<delete id="deleteQna" parameterType="int">
		update qna
		   set qna_deleted = 'Y',
		       user_id = 'Admin'
		 where qna_idx = #{qnaIdx} 		 
	</delete>
	
	<!-- QNA 수정 -->
	<update id="updateQna" parameterType="project.dto.QnaDto">
		update qna
		   set qna_title = #{qnaTitle}, 
		       qna_content = #{qnaContent}, 
		       qna_created_time = now(),
		       user_id = 'Admin'
		 where qna_idx = #{qnaIdx} 		 
	</update>
	
	<!-- QNA 페이지별 조회 -->
	<select id="listQnaDtoByPages" parameterType="int" resultType="project.dto.QnaDto">
		select qna_idx, qna_title, user_id,
			   date_format(qna_created_time, '%Y.%m.%d' ) as qna_created_time
		  from qna
		  where qna_deleted = "N"
	  order by qna_idx desc
	     limit 10
	    offset #{pages}
	</select> 
	
	<!-- QNA 페이지수 조회 -->
	<select id="listQnaDtoPageCount" resultType="int">
		select ceil(count(*) / 10 ) 
		  from qna
	</select>
	
	<!-- QNA 상세페이지 COMMENT 리스트 -->
	<select id="selectCommentList" resultType="project.dto.QnaCommentDto" parameterType="int">
		select qna_comment_idx, user_id, qna_comment_content, qna_idx,
			   date_format(qna_comment_time, '%Y.%m.%d %H:%i:%s' ) as qna_comment_time
		  from qna_comment
		 where qna_idx=#{qnaIdx}
	</select>
	
	<!-- QNA 상세페이지 -->
	<select id="selectQnaInfo" parameterType="int" resultType="project.dto.QnaDto">
		select qna_idx, qna_title, qna_content,
			   date_format(qna_created_time, '%Y.%m.%d' ) as qna_created_time
		  from qna
		 where qna_deleted = 'N' and qna_idx=#{qnaIdx}
	</select>
	
	<!-- QNA 상세페이지 COMMENT 등록 -->
	<insert id="insertComment" parameterType="project.dto.QnaCommentDto">
		insert into qna_comment (qna_comment_content, qna_comment_time, qna_idx, user_id)
		values(#{qnaCommentContent}, now(), #{qnaIdx}, 'jks@jks.com')
	</insert>
	

</mapper>